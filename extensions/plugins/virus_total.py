from extensions.plugin_base import PluginBase
import urllib2
import json
import os

class VirusTotal(PluginBase):

    @staticmethod
    def get_name():
        return 'virustotal'
    def initialize_config(self, config):
        self.apikey = config.get(VirusTotal.get_name(), "apikey")
    
    
    def lookup_by_hash(self, sample_hash):
        query_dict = dict()
        # Set URL parameters
        query_dict["endpoint"] =  "https://www.virustotal.com/vtapi/v2/file/report"
        query_dict["apikey"]   =  self.apikey
        query_dict["resource"] =  sample_hash
        url = "{endpoint}?apikey={apikey}&resource={resource}".format(**query_dict)   
        # Retrieve the data 
        v_total_json = urllib2.urlopen(url).read()
        return v_total_json
    
    def analyze(self, malware_sample):
        # Lookup details for the sample on virus total
        json_response = self.lookup_by_hash(malware_sample.hash_sha256)
        # Set the report name
        self.report_name = "virustotal_details.json"
        # Save the json in a pretty format
        self.report = json.dumps(json.loads(json_response), sort_keys=True,
                  indent=4)
        
    def create_report(self):
        print "Creating report"
        dir = self.__class__.get_name()
        report_dir = os.path.join(self.analysis_report_directory, dir)
        try:
            if not os.path.exists(report_dir):
                os.makedirs(report_dir)
            super(VirusTotal,self).create_report(self.report, os.path.join(report_dir,self.report_name))
        except Exception, err:
            print err
            